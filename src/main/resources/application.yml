spring:
  mvc:
    pathmatch:
      matching-strategy: ANT_PATH_MATCHER
  datasource:
    url: ${SPRING_DATABASE_URL}
    username: ${SPRING_DATABASE_USERNAME}
    password: ${SPRING_DATABASE_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: create
  profiles:
    active: local
  application:
    name: Notifications-application
  kafka:
    producer:
      bootstrap-servers: localhost:9892
      client-id: NotifierClient
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 5
      batch-size: 16384
      buffer-memory: 335544432
      linger-ms: 1
      enable-Idempoyence: true
      transactionalId: NotificationTransId
    consumer:
      bootstrap-servers: localhost:9892
      client-id: NotifierClient
      key-deserializer: org.apache.kafka.common.serialization.StringSerializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonSerializer
      auto-offset-reset: earliest
      isolation-level: read_committed
      max-poll-records: 18
      heartbeat-interval: 6000

kafka:
  topic:
    string-demo:
      name: notification-string-demo
      groupId: NotificationStringDemoGroup
    json-demo:
      name: notification-json-demo
      groupId: NotificationStringDemoGroup

cloud:
  aws:
    credentials:
      access-key: AKIA5BDGIF2UOA5ZKIPR
      secret-key: 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
    stack:
      auto: false
    region:
      auto: false
      static: us-east-1

weather:
  alert:
    topic: alerts-weather-topic

logging:
  level:
    com:
      amazonaws:
        util:
          EC2MetadataUtils: error
        internal:
          InstanceMetadataServiceResourceFetcher: error